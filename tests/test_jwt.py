import pytest
import os
import subprocess
import textwrap

from tests.expected_files import jwt_files
from tests.utils import build_files_list, WIN, WORKING

@pytest.mark.parametrize('template', ['jinja2', 'mako', 'chameleon'])
def test_jwt(cookies, venv, capfd, template):
    result = cookies.bake(extra_context={
        'project_name': 'Test Project',
        'template_language': template,
        'persistence': 'none',
        'services': 'pyramid-services',
        'authentication': 'jwt',
        'repo_name': 'myapp',
    })

    assert result.exit_code == 0

    out, err = capfd.readouterr()

    if WIN:
        assert 'Scripts\\pserve' in out
        for idx, base_file in enumerate(jwt_files):
            jwt_files[idx] = base_file.replace('/', '\\')
        jwt_files.sort()

    else:
        assert 'bin/pserve' in out

    # Get the file list generated by cookiecutter. Differs based on backend.
    files = build_files_list(str(result.project_path))
    files.sort()

    # Rename files based on template being used
    if template == 'chameleon':
        template = 'pt'

    for idx, base_file in enumerate(jwt_files):
        if 'templates' in base_file:
            jwt_files[idx] = jwt_files[idx].split('.')[0] + '.' + template

    assert jwt_files == files

